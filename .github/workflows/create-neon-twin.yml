name: Create Neon Twin

on:
  schedule:
    - cron: '0 0 * * *' # Runs at midnight ET (us-east-1)
  workflow_dispatch:

env:
  PROD_DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }} # Production or primary database
  DEV_DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }} # Development database
  SSL_CERT_BASE64: ${{ secrets.SSL_CERT_BASE64 }}
  PG_VERSION: '16'
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  NODE_VERSION: '20.x'

jobs:
  dump-and-restore:
    runs-on: ubuntu-latest

    steps:
      - name: Decode SSL Cert
        run: |
          echo "${{ secrets.SSL_CERT_BASE64 }}" | base64 --decode > us-east-1-bundle.pem

      - name: Install PostgreSQL
        run: |
          sudo apt update
          yes '' | sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
          sudo apt install -y postgresql-${{ env.PG_VERSION }}

      - name: Dump from RDS and Restore to Neon
        run: |
          /usr/lib/postgresql/${{ env.PG_VERSION }}/bin/pg_dump "${{ env.PROD_DATABASE_URL }}" -Fc -f "${{ github.workspace }}/prod-dump-file.dump"
          /usr/lib/postgresql/${{ env.PG_VERSION }}/bin/pg_restore --clean --no-owner --no-acl --if-exists -d "${{ env.DEV_DATABASE_URL }}" "${{ github.workspace }}/prod-dump-file.dump"

  query-db-size:
    runs-on: ubuntu-latest
    needs:
      - dump-and-restore

    outputs:
      bytes: ${{ steps.query-db-size.outputs.bytes }}

    steps:
      - name: Install PostgreSQL
        run: |
          sudo apt update
          yes '' | sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
          sudo apt install -y postgresql-${{ env.PG_VERSION }}

      - name: Query DB Size
        id: query-db-size
        run: |
          db_size=$(/usr/lib/postgresql/${{ env.PG_VERSION }}/bin/psql "${{ env.PROD_DATABASE_URL }}" -t -c "SELECT pg_database_size(current_database());")
          echo "bytes=$db_size" >> $GITHUB_OUTPUT

  post-to-slack:
    runs-on: ubuntu-latest
    needs:
      - dump-and-restore
      - query-db-size
    if: always()

    env:
      DATABASE_SIZE_IN_BYTES: ${{ needs.query-db-size.outputs.bytes }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Post failure message to Slack
        if: ${{ needs['dump-and-restore'].result == 'failure' }}
        env:
          JOB_STATUS: 'failure'
        run: |
          node src/index.js

      - name: Post success message to Slack
        if: ${{ needs['dump-and-restore'].result == 'success' }}
        env:
          JOB_STATUS: 'success'
        run: |
          node src/index.js
