name: Backup and Restore PostgreSQL

on:
  schedule:
    - cron: '0 0 * * *' # Runs at midnight ET (us-east-1)
  workflow_dispatch:

jobs:
  db-backup-and-restore:
    runs-on: ubuntu-latest

    env:
      PROD_DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }} # Production or primary database
      DEV_DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }} # Development database
      PG_VERSION: '16'
      SSL_CERT_BASE64: ${{ secrets.SSL_CERT_BASE64 }}
      NODE_VERSION: '20.x' # Specify Node.js version 20 for all steps

    steps:
      - name: Test SSL Cert env var
        run: |
          echo "${{ secrets.SSL_CERT_BASE64 }}" | base64 --decode > us-east-1-bundle.pem

      - name: Install PostgreSQL
        run: |
          sudo apt update
          sudo apt install -y postgresql-common
          yes '' | sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
          sudo apt install -y postgresql-${{ env.PG_VERSION }}

      - name: Get timestamp
        id: timestamp
        run: |
          echo "TIMESTAMP=$(date +%d-%B-%Y_%H-%M-%S)" >> $GITHUB_ENV

      - name: Dump from RDS
        run: |
          /usr/lib/postgresql/${{ env.PG_VERSION }}/bin/pg_dump "${{ env.PROD_DATABASE_URL }}" -Fc -f "${{ github.workspace }}/backup-${{ env.TIMESTAMP }}.dump"

      - name: Upload backup file
        uses: actions/upload-artifact@v2
        with:
          name: database-backup
          path: '${{ github.workspace }}/backup-${{ env.TIMESTAMP }}.dump'

      - name: Download backup file
        uses: actions/download-artifact@v2
        with:
          name: database-backup
          path: '${{ github.workspace }}'

      - name: List downloaded files
        run: |
          ls -lh "${{ github.workspace }}"

      - name: Restore to Neon
        run: |
          /usr/lib/postgresql/${{ env.PG_VERSION }}/bin/pg_restore --clean --no-owner --no-acl -d "${{ env.DEV_DATABASE_URL }}" "${{ github.workspace }}/backup-${{ env.TIMESTAMP }}.dump"

  post-to-slack-webhook:
    runs-on: ubuntu-latest
    needs: db-backup-and-restore

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Run the JavaScript script
        run: node src/index.js
